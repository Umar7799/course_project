generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int  @id @default(autoincrement()) // ðŸ‘ˆ Int, Auto-incrementing
  name     String  
  email    String  @unique
  password String
  role     Role    @default(USER)

  templates Template[]
  forms     Form[]
}

model Template {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  isPublic      Boolean   @default(false)
  createdAt   DateTime  @default(now())

  // ðŸ†• NEW fields:
  topic       String?           // Optional topic/category
  tags        String[]          // Tags as string array
  image       String?           // Optional image URL

  authorId    Int
  author      User      @relation(fields: [authorId], references: [id])
  questions   Question[]
  forms       Form[]
}


model Question {
  id         Int  @id @default(autoincrement())
  text       String  
  type       QuestionType  

  templateId Int  // ðŸ‘ˆ Changed from String to Int
  template   Template @relation(fields: [templateId], references: [id])

  answers    Answer[]
}

model Form {
  id         Int  @id @default(autoincrement())
  submittedAt DateTime @default(now())

  userId     Int  // ðŸ‘ˆ Changed from String to Int
  user       User @relation(fields: [userId], references: [id])

  templateId Int  // ðŸ‘ˆ Changed from String to Int
  template   Template @relation(fields: [templateId], references: [id])

  answers    Answer[]
}

model Answer {
  id         Int  @id @default(autoincrement())
  response   String  

  questionId Int  // ðŸ‘ˆ Changed from String to Int
  question   Question @relation(fields: [questionId], references: [id])

  formId     Int  // ðŸ‘ˆ Changed from String to Int
  form       Form @relation(fields: [formId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum QuestionType {
  SINGLE_LINE
  MULTI_LINE
  INTEGER
  CHECKBOX
}
